{"version":3,"sources":["components/ButtonPad/ButtonPad.module.css","components/Display/Display.js","components/Button/Button.js","components/ButtonPad/ButtonPad.js","Logic/SplitMultiple.js","Logic/Operate.js","App.js","serviceWorker.js","index.js","components/Button/Button.module.css","App.module.css","components/Display/Display.module.css"],"names":["module","exports","display","props","displyClass","classes","Display","light","disLight","className","history","lastExpression","expression","button","btnClass","Button","blue","onClick","click","name","buttonPad","ButtonPad","clicked","themeChanged","splitMultiple","str","items","firstItem","i","length","split","join","math","require","isOperand","btnName","res","operate","obj","numberArr","splitMulti","expr","lastNum","lastPressed","lastExpr","result","evaluate","toString","test","substring","isLightTheme","divide","slice","includes","App","state","takeExpressionHandler","setState","Operate","themeChangeHandler","themeChange","dark","this","Component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.f491597d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"ButtonPad\":\"ButtonPad_ButtonPad__3CGbL\"};","import React from 'react';\r\nimport classes from './Display.module.css';\r\n\r\nconst display = props => {\r\n    let displyClass = classes.Display;\r\n    if(props.light){\r\n        displyClass = classes.Display + ' ' + classes.disLight;\r\n    }\r\n\r\nreturn(\r\n    <div className= {displyClass}>\r\n        <div className ={classes.history}>{props.lastExpression}</div>\r\n        <div>{props.expression}</div>\r\n        <hr />\r\n    </div>\r\n)\r\n}\r\n\r\nexport default display;\r\n\r\n","import React from \"react\";\r\nimport classes from \"./Button.module.css\";\r\n\r\nconst button = (props) => {\r\n    let btnClass = classes.Button;\r\n    if(props.blue){\r\n        btnClass = classes.Button + \" \" + classes.blue;\r\n    }if(props.light && !props.blue){\r\n      btnClass = classes.Button + ' ' + classes.light;\r\n    }\r\n\r\n    return (\r\n      <div className={btnClass} onClick={() => props.click(props.name)}>\r\n        {props.name}\r\n      </div>\r\n    );\r\n}\r\n\r\nexport default button;\r\n","import Button from \"../Button/Button\";\r\nimport React from \"react\";\r\nimport classes from \"./ButtonPad.module.css\";\r\n\r\nconst buttonPad = (props) => {\r\n  return (\r\n    <div className={classes.ButtonPad}>\r\n      <div>\r\n        <Button name=\"AC\" click={props.clicked} light={props.themeChanged} />\r\n        <Button name=\"⌫\" click={props.clicked} light={props.themeChanged} />\r\n        <Button name=\"%\" click={props.clicked} light={props.themeChanged} />\r\n        <Button\r\n          name=\"/\"\r\n          blue\r\n          click={props.clicked}\r\n          light={props.themeChanged}\r\n        />\r\n      </div>\r\n      <div>\r\n        <Button name=\"1\" click={props.clicked} light={props.themeChanged} />\r\n        <Button name=\"2\" click={props.clicked} light={props.themeChanged} />\r\n        <Button name=\"3\" click={props.clicked} light={props.themeChanged} />\r\n        <Button\r\n          name=\"*\"\r\n          blue\r\n          click={props.clicked}\r\n          light={props.themeChanged}\r\n        />\r\n      </div>\r\n      <div>\r\n        <Button name=\"4\" click={props.clicked} light={props.themeChanged} />\r\n        <Button name=\"5\" click={props.clicked} light={props.themeChanged} />\r\n        <Button name=\"6\" click={props.clicked} light={props.themeChanged} />\r\n        <Button\r\n          name=\"-\"\r\n          blue\r\n          click={props.clicked}\r\n          light={props.themeChanged}\r\n        />\r\n      </div>\r\n      <div>\r\n        <Button name=\"7\" click={props.clicked} light={props.themeChanged} />\r\n        <Button name=\"8\" click={props.clicked} light={props.themeChanged} />\r\n        <Button name=\"9\" click={props.clicked} light={props.themeChanged} />\r\n        <Button\r\n          name=\"+\"\r\n          blue\r\n          click={props.clicked}\r\n          light={props.themeChanged}\r\n        />\r\n      </div>\r\n      <div>\r\n        <Button name=\"☼\" click={props.clicked} light={props.themeChanged} />\r\n        <Button name=\"0\" click={props.clicked} light={props.themeChanged} />\r\n        <Button name=\".\" click={props.clicked} light={props.themeChanged} />\r\n        <Button\r\n          name=\"=\"\r\n          blue\r\n          click={props.clicked}\r\n          light={props.themeChanged}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default buttonPad;\r\n","\r\n\r\nconst splitMultiple = (str, items) => {\r\n    let firstItem = items[0];\r\n    for(let i = 1; i < items.length; i++){\r\n        str = str.split(items[i]).join(firstItem);\r\n    }\r\n    str = str.split(firstItem);\r\n    return str;\r\n}\r\n\r\nexport default splitMultiple;","import splitMulti from './SplitMultiple';\r\nconst math = require('mathjs');\r\n\r\nfunction isNumber(item) {\r\n  return /[0-9]+/.test(item);\r\n}\r\n\r\nconst isOperand = (btnName) => {\r\n  let res;\r\n  switch (btnName) {\r\n    case \"+\":\r\n    case \"-\":\r\n    case \"*\":\r\n    case \"/\":\r\n      res = true;\r\n      break;\r\n\r\n    default:\r\n      res = false;\r\n      break;\r\n  }\r\n\r\n  return res;\r\n};\r\n\r\nconst operate = (obj, btnName) => {\r\n  let numberArr = splitMulti(obj.expr, [\"+\", \"-\", \"*\", \"/\"]);\r\n  let lastNum = numberArr[numberArr.length - 1];\r\n\r\n\r\n  if (btnName === \"AC\") {\r\n    return {\r\n      expr: \"\",\r\n      lastPressed: \"\",\r\n      lastExpr: ''\r\n    };\r\n  };\r\n\r\n  if(btnName === '='){\r\n      const result = math.evaluate(obj.expr);\r\n      if(obj.expr !== ''){\r\n          return {\r\n              lastExpr : obj.expr,\r\n              expr : result.toString()\r\n          }\r\n      }\r\n  }\r\n\r\n  if (isNumber(btnName)) {\r\n    return {\r\n      expr: obj.expr + btnName,\r\n      lastPressed: btnName,\r\n    };\r\n  }\r\n\r\n  if(isOperand(btnName)){\r\n      if (isOperand(obj.lastPressed) || obj.expr.substring(obj.expr.length - 1) === '.') {\r\n          return {}\r\n      }\r\n\r\n      return {\r\n          expr: obj.expr + btnName,\r\n          lastPressed: btnName\r\n      }\r\n  }\r\n\r\n  if (btnName === \"☼\") {\r\n    return {\r\n      isLightTheme: !obj.isLightTheme,\r\n    };\r\n  }\r\n\r\n  if(btnName === \"%\"){\r\n    const result = math.divide(lastNum, 100);\r\n    const newExp = obj.expr.substring(0,obj.expr.length - lastNum.length);\r\n    return{\r\n      expr: newExp + result.toString()\r\n    }\r\n    }\r\n\r\n    if(btnName === '⌫'){\r\n      \r\n      return {\r\n        lastPressed:\r\n          obj.expr.length === 1 ? \"\" : obj.expr.substring(obj.expr.length - 1),\r\n        expr: obj.expr.slice(0, obj.expr.length - 1),\r\n      };\r\n    }\r\n\r\n\r\n  if(btnName === '.'){\r\n    if(obj.expr === ''){\r\n      return {\r\n        expr: '0.',\r\n        lastPressed: btnName\r\n      }\r\n    }\r\n    if (!lastNum.includes(\".\")) {\r\n        return {\r\n          expr: obj.expr + \".\",\r\n          lastPressed: btnName,\r\n        };\r\n      } else {\r\n        return {};\r\n      }\r\n    }\r\n  };\r\n\r\nexport default operate;\r\n","import React, { Component } from 'react';\nimport classes from './App.module.css';\nimport Display from './components/Display/Display';\nimport ButtonPad from './components/ButtonPad/ButtonPad';\nimport Operate from '../src/Logic/Operate';\n\n\nclass App extends Component {\n\n  state={\n    expr : '',\n    lastPressed: '',\n    lastExpr: '',\n    isLightTheme: false\n  }\n\n  takeExpressionHandler = (btnName) => {\n    this.setState(Operate(this.state , btnName));\n  }\n\n  themeChangeHandler = (themeChange) => {\n    if(themeChange){\n      return classes.App + ' ' + classes.light;\n    }\n    else{\n      return classes.App + ' ' + classes.dark;\n    }\n  }\n  \n    render(){\n      return(\n      <div className= {this.themeChangeHandler(this.state.isLightTheme)}>\n      <Display expression = {this.state.expr} lastExpression = {this.state.lastExpr} light = {this.state.isLightTheme}/>\n      <ButtonPad clicked = {this.takeExpressionHandler} themeChanged = {this.state.isLightTheme}/>\n    </div>\n      )\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__1Vv68\",\"blue\":\"Button_blue__BcF9k\",\"light\":\"Button_light__3k1tH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__2zQ6z\",\"dark\":\"App_dark__3SEsg\",\"light\":\"App_light__1amG-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Display\":\"Display_Display__3Pri_\",\"history\":\"Display_history__9gC_K\",\"disLight\":\"Display_disLight__T6QcX\"};"],"sourceRoot":""}